<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
//HOLDER_NUMBER_OF_CARS

const int nodes = 57; //number of nodes in the network

int currentCar = 0;

chan Reroute[N], RouteSet;</declaration>
	<template>
		<name x="5" y="5">Controller</name>
		<declaration>// Place local declarations here.

int CarDone = 0;
int AllCarsDone = 0;
int RerouteCar = 0;
int currentCar = 0;

int CheckReroute()
{

return 0;
}

void AddRouteWeight() 
{}</declaration>
		<location id="id0" x="-909" y="-187">
			<name x="-919" y="-221">InitSate</name>
		</location>
		<location id="id1" x="-748" y="-187">
			<name x="-758" y="-221">GetRoute</name>
		</location>
		<location id="id2" x="-323" y="-187">
			<name x="-333" y="-221">UpdateWeights</name>
		</location>
		<location id="id3" x="-93" y="-187">
			<name x="-153" y="-221">CheckDone</name>
		</location>
		<location id="id4" x="187" y="-187">
			<name x="177" y="-221">End</name>
		</location>
		<location id="id5" x="-586" y="-187">
		</location>
		<location id="id6" x="-467" y="-289">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="guard" x="-518" y="-178">RerouteCar == 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-408" y="-272">RouteSet?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-663" y="-289">RerouteCar == 1</label>
			<label kind="synchronisation" x="-680" y="-272">Reroute[currentCar]!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="assignment" x="-730" y="-187">CheckReroute()</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-85" y="-161">CarDone == 1 &amp;&amp; AllCarsDone == 1</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="guard" x="-561" y="-8">CarDone == 1 &amp;&amp; AllCarsDone == 0</label>
			<nail x="-93" y="17"/>
			<nail x="-748" y="17"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="assignment" x="-272" y="-178">currentCar++,
AddRouteWeight()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
		</transition>
	</template>
	<template>
		<name>Rerouter</name>
		<parameter>int id</parameter>
		<declaration>

void ChooseRoute()
{}</declaration>
		<location id="id7" x="-450" y="-59">
		</location>
		<location id="id8" x="-280" y="-59">
			<name x="-331" y="-93">ComputeRoute</name>
		</location>
		<location id="id9" x="-119" y="-59">
			<name x="-129" y="-93">SetRoute</name>
		</location>
		<location id="id10" x="25" y="-59">
			<name x="15" y="-93">Done</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-85" y="-42">RouteSet!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="assignment" x="-255" y="-51">ChooseRoute()</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-442" y="-42">Reroute[id]?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

const int pid[N] = //HOLDER_CAR_PID 
const int route[N][nodes] = //HOLDER_CAR_ROUTE 




// List one or more processes to be composed into a system.
system Controller, Rerouter;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
